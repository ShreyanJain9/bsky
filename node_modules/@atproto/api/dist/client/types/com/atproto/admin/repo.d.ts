import { ValidationResult } from '@atproto/lexicon';
import * as ComAtprotoAdminModerationAction from './moderationAction';
import * as ComAtprotoAdminModerationReport from './moderationReport';
export interface View {
    did: string;
    handle: string;
    account?: Account;
    relatedRecords: {}[];
    indexedAt: string;
    moderation: Moderation;
    [k: string]: unknown;
}
export declare function isView(v: unknown): v is View;
export declare function validateView(v: unknown): ValidationResult;
export interface ViewDetail {
    did: string;
    handle: string;
    account?: Account;
    relatedRecords: {}[];
    indexedAt: string;
    moderation: ModerationDetail;
    [k: string]: unknown;
}
export declare function isViewDetail(v: unknown): v is ViewDetail;
export declare function validateViewDetail(v: unknown): ValidationResult;
export interface Account {
    email: string;
    [k: string]: unknown;
}
export declare function isAccount(v: unknown): v is Account;
export declare function validateAccount(v: unknown): ValidationResult;
export interface Moderation {
    currentAction?: ComAtprotoAdminModerationAction.ViewCurrent;
    [k: string]: unknown;
}
export declare function isModeration(v: unknown): v is Moderation;
export declare function validateModeration(v: unknown): ValidationResult;
export interface ModerationDetail {
    currentAction?: ComAtprotoAdminModerationAction.ViewCurrent;
    actions: ComAtprotoAdminModerationAction.View[];
    reports: ComAtprotoAdminModerationReport.View[];
    [k: string]: unknown;
}
export declare function isModerationDetail(v: unknown): v is ModerationDetail;
export declare function validateModerationDetail(v: unknown): ValidationResult;
