import { AtpAgent } from './agent';
import { AppBskyFeedPost, AppBskyActorProfile } from './client';
export declare class BskyAgent extends AtpAgent {
    get app(): import("./client").AppNS;
    getTimeline: typeof this.api.app.bsky.feed.getTimeline;
    getAuthorFeed: typeof this.api.app.bsky.feed.getAuthorFeed;
    getPostThread: typeof this.api.app.bsky.feed.getPostThread;
    getPost: typeof this.api.app.bsky.feed.post.get;
    getLikes: typeof this.api.app.bsky.feed.getLikes;
    getRepostedBy: typeof this.api.app.bsky.feed.getRepostedBy;
    getFollows: typeof this.api.app.bsky.graph.getFollows;
    getFollowers: typeof this.api.app.bsky.graph.getFollowers;
    getProfile: typeof this.api.app.bsky.actor.getProfile;
    getProfiles: typeof this.api.app.bsky.actor.getProfiles;
    searchActors: typeof this.api.app.bsky.actor.searchActors;
    searchActorsTypeahead: typeof this.api.app.bsky.actor.searchActorsTypeahead;
    listNotifications: typeof this.api.app.bsky.notification.listNotifications;
    countUnreadNotifications: typeof this.api.app.bsky.notification.getUnreadCount;
    post(record: Partial<AppBskyFeedPost.Record> & Omit<AppBskyFeedPost.Record, 'createdAt'>): Promise<{
        uri: string;
        cid: string;
    }>;
    deletePost(postUri: string): Promise<void>;
    like(uri: string, cid: string): Promise<{
        uri: string;
        cid: string;
    }>;
    deleteLike(likeUri: string): Promise<void>;
    repost(uri: string, cid: string): Promise<{
        uri: string;
        cid: string;
    }>;
    deleteRepost(repostUri: string): Promise<void>;
    follow(subjectDid: string): Promise<{
        uri: string;
        cid: string;
    }>;
    deleteFollow(followUri: string): Promise<void>;
    upsertProfile(updateFn: (existing: AppBskyActorProfile.Record | undefined) => AppBskyActorProfile.Record | Promise<AppBskyActorProfile.Record>): Promise<void>;
    mute(actor: string): Promise<import("./client/types/app/bsky/graph/muteActor").Response>;
    unmute(actor: string): Promise<import("./client/types/app/bsky/graph/unmuteActor").Response>;
    updateSeenNotifications(seenAt?: string): Promise<import("./client/types/app/bsky/notification/updateSeen").Response>;
}
